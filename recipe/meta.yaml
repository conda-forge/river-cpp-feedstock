{% set name = "river-cpp" %}
{% set version = "1.0.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/pbotros/river/archive/43f6a1bbf247e1c6575574d7d7667ed058c2b5a8.tar.gz
  sha256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855

build:
  number: 4
  run_exports:
    - {{ pin_subpackage("river-cpp", max_pin="x.x") }}

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('cxx') }}
    - cmake
    - make  # [not win]
    - ninja  # [win]
    - pkg-config
  host:
    - boost-cpp
    - arrow-cpp
    - glog
  run:
    - gflags
    - boost-cpp
    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.13") }}  # [osx and x86_64]

test:
  commands:
    - test -d ${PREFIX}/include/river  # [unix]
    - test -f ${PREFIX}/include/river/river.h  # [unix]
    - test -f ${PREFIX}/lib/cmake/river/river-config.cmake  # [unix]
    - test -f ${PREFIX}/lib/libriver.so  # [linux]
    - test -f ${PREFIX}/lib/libriver.dylib  # [osx]
    - if exist %LIBRARY_PREFIX%\include\river\river.h (exit 0) else (exit 1)  # [win]
    - if exist %LIBRARY_PREFIX%\lib\cmake\river-config.cmake (exit 0) else (exit 1)  # [win]
    - if exist %LIBRARY_PREFIX%\bin\river.dll (exit 0) else (exit 1)  # [win]

about:
  home: https://github.com/pbotros/river
  summary: 'High-throughput, structured, and persistent streaming'
  description: |
    A high-throughput, structured streaming framework built atop Redis Streams, with optional support for persistence-to-disk. C++ and Python support.
  license: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - pbotros
